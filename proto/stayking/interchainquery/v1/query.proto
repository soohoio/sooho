syntax = "proto3";
package stayking.interchainquery.v1;

import "stayking/interchainquery/v1/genesis.proto";
import "google/api/annotations.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";

option go_package = "github.com/soohoio/stayking/v2/x/interchainquery/types";

service QueryService {
  rpc PendingQueries(QueryPendingQueriesRequest)
      returns (QueryPendingQueriesResponse) {
    option (google.api.http).get = "/stayking/interchainquery/pending_queries";
  }
  rpc QueryState(QueryQueryStateRequest) returns (QueryQueryStateResponse) {
    option (google.api.http).get = "/stayking/interchainquery/query_state";
  }
}

message QueryPendingQueriesRequest {}
message QueryPendingQueriesResponse {
  repeated Query pending_queries = 1 [ (gogoproto.nullable) = false ];
}

message QueryQueryStateRequest { uint64 sequence = 1; }

message QueryQueryStateResponse {
  google.protobuf.Any request = 1 [ (gogoproto.nullable) = false ];
  google.protobuf.Any response = 2 [ (gogoproto.nullable) = true ];
}
