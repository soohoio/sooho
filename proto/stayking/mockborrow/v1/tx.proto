syntax = "proto3";
package stayking.mockborrow.v1;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/soohoio/stayking/v2/x/mockborrow/types";

service Msg {
  rpc Borrow(MsgBorrow) returns (MsgBorrowResponse);

  rpc Repay(MsgRepay) returns (MsgRepayResponse);
}

message MsgBorrow {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string from = 1;
  string denom = 2;
  repeated cosmos.base.v1beta1.Coin collateral = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.moretags) = "yaml:\"collateral\""
  ];
  repeated cosmos.base.v1beta1.Coin borrow_amount = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.moretags) = "yaml:\"borrow_amount\""
  ];
}

message MsgBorrowResponse { uint64 id = 1; }

message MsgRepay {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string from = 1;
  string denom = 2;
  uint64 id = 3;
  repeated cosmos.base.v1beta1.Coin amount = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.moretags) = "yaml:\"amount\""
  ];
}

message MsgRepayResponse { string change = 1; }