syntax = "proto3";
package stayking.records;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "stayking/records/genesis.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/soohoio/stayking/v2/x/records/types";

// Query defines the gRPC querier service.
service Query {
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/stayking/records/params";
  }
  rpc UserRedemptionRecord(QueryGetUserRedemptionRecordRequest)
      returns (QueryGetUserRedemptionRecordResponse) {
    option (google.api.http).get =
        "/stayking/records/user_redemption_record/{id}";
  }

  rpc UserRedemptionRecordAll(QueryAllUserRedemptionRecordRequest)
      returns (QueryAllUserRedemptionRecordResponse) {
    option (google.api.http).get = "/stayking/records/user_redemption_record";
  }

  rpc UserRedemptionRecordForUser(QueryAllUserRedemptionRecordForUserRequest)
      returns (QueryAllUserRedemptionRecordForUserResponse) {
    option (google.api.http).get =
        "/stayking/records/user_redemption_record_for_user/"
        "{chain_id}/{day}/{address}/{limit}";
  }

  rpc EpochUnbondingRecord(QueryGetEpochUnbondingRecordRequest)
      returns (QueryGetEpochUnbondingRecordResponse) {
    option (google.api.http).get =
        "/stayking/records/epoch_unbonding_record/{epoch_number}";
  }

  rpc EpochUnbondingRecordAll(QueryAllEpochUnbondingRecordRequest)
      returns (QueryAllEpochUnbondingRecordResponse) {
    option (google.api.http).get = "/stayking/records/epoch_unbonding_record";
  }

  rpc DepositRecord(QueryGetDepositRecordRequest)
      returns (QueryGetDepositRecordResponse) {
    option (google.api.http).get = "/stayking/records/deposit_record/{id}";
  }

  rpc DepositRecordAll(QueryAllDepositRecordRequest)
      returns (QueryAllDepositRecordResponse) {
    option (google.api.http).get = "/stayking/records/deposit_record";
  }

  rpc DenomPriceRecordAll(QueryAllDenomPriceRecordRequest)
      returns (QueryAllDenomPriceRecordResponse) {
    option (google.api.http).get = "/stayking/records/denom_price";
  }

  rpc DenomPriceRecord(QueryGetDenomPriceRecordRequest)
      returns (QueryGetDenomPriceRecordResponse) {
    option (google.api.http).get = "/stayking/records/denom_price/{base_denom}/{target_denom}";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

message QueryAllDenomPriceRecordRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllDenomPriceRecordResponse {
  repeated DenomPriceRecord denom_price_record = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetDenomPriceRecordRequest {
  string base_denom = 1;
  string target_denom = 2;
}

message QueryGetDenomPriceRecordResponse {
  DenomPriceRecord denom_price_record = 1 [ (gogoproto.nullable) = false ];
}

message QueryGetDepositRecordRequest { uint64 id = 1; }

message QueryGetDepositRecordResponse {
  DepositRecord deposit_record = 1 [ (gogoproto.nullable) = false ];
}

message QueryAllDepositRecordRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllDepositRecordResponse {
  repeated DepositRecord deposit_record = 1 [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetUserRedemptionRecordRequest { string id = 1; }

message QueryGetUserRedemptionRecordResponse {
  UserRedemptionRecord user_redemption_record = 1
      [ (gogoproto.nullable) = false ];
}

message QueryAllUserRedemptionRecordRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllUserRedemptionRecordResponse {
  repeated UserRedemptionRecord user_redemption_record = 1
      [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// Query UserRedemptionRecords by chainId / userId pair
message QueryAllUserRedemptionRecordForUserRequest {
  string chain_id = 1;
  uint64 day = 2;
  string address = 3;
  uint64 limit = 4;
  cosmos.base.query.v1beta1.PageRequest pagination = 5;
}

message QueryAllUserRedemptionRecordForUserResponse {
  repeated UserRedemptionRecord user_redemption_record = 1
      [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetEpochUnbondingRecordRequest { uint64 epoch_number = 1; }

message QueryGetEpochUnbondingRecordResponse {
  EpochUnbondingRecord epoch_unbonding_record = 1
      [ (gogoproto.nullable) = false ];
}

message QueryAllEpochUnbondingRecordRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllEpochUnbondingRecordResponse {
  repeated EpochUnbondingRecord epoch_unbonding_record = 1
      [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}