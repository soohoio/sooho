// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: stayking/records/genesis.proto

package types

import (
	context "context"
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type DepositRecord_Status int32

const (
	// in transfer queue to be sent to the delegation ICA
	DepositRecord_TRANSFER_QUEUE DepositRecord_Status = 0
	// transfer in progress (IBC packet sent, ack not received)
	DepositRecord_TRANSFER_IN_PROGRESS DepositRecord_Status = 2
	// in staking queue on delegation ICA
	DepositRecord_DELEGATION_QUEUE DepositRecord_Status = 1
	// staking in progress (ICA packet sent, ack not received)
	DepositRecord_DELEGATION_IN_PROGRESS DepositRecord_Status = 3
)

var DepositRecord_Status_name = map[int32]string{
	0: "TRANSFER_QUEUE",
	2: "TRANSFER_IN_PROGRESS",
	1: "DELEGATION_QUEUE",
	3: "DELEGATION_IN_PROGRESS",
}

var DepositRecord_Status_value = map[string]int32{
	"TRANSFER_QUEUE":         0,
	"TRANSFER_IN_PROGRESS":   2,
	"DELEGATION_QUEUE":       1,
	"DELEGATION_IN_PROGRESS": 3,
}

func (x DepositRecord_Status) String() string {
	return proto.EnumName(DepositRecord_Status_name, int32(x))
}

func (DepositRecord_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b28e84889d3ee73b, []int{4, 0}
}

type DepositRecord_Source int32

const (
	DepositRecord_STRIDE         DepositRecord_Source = 0
	DepositRecord_WITHDRAWAL_ICA DepositRecord_Source = 1
)

var DepositRecord_Source_name = map[int32]string{
	0: "STRIDE",
	1: "WITHDRAWAL_ICA",
}

var DepositRecord_Source_value = map[string]int32{
	"STRIDE":         0,
	"WITHDRAWAL_ICA": 1,
}

func (x DepositRecord_Source) String() string {
	return proto.EnumName(DepositRecord_Source_name, int32(x))
}

func (DepositRecord_Source) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b28e84889d3ee73b, []int{4, 1}
}

type HostZoneUnbonding_Status int32

const (
	// tokens bonded on delegate account
	HostZoneUnbonding_UNBONDING_QUEUE       HostZoneUnbonding_Status = 0
	HostZoneUnbonding_UNBONDING_IN_PROGRESS HostZoneUnbonding_Status = 3
	// unbonding completed on delegate account
	HostZoneUnbonding_EXIT_TRANSFER_QUEUE       HostZoneUnbonding_Status = 1
	HostZoneUnbonding_EXIT_TRANSFER_IN_PROGRESS HostZoneUnbonding_Status = 4
	// transfer success
	HostZoneUnbonding_CLAIMABLE HostZoneUnbonding_Status = 2
)

var HostZoneUnbonding_Status_name = map[int32]string{
	0: "UNBONDING_QUEUE",
	3: "UNBONDING_IN_PROGRESS",
	1: "EXIT_TRANSFER_QUEUE",
	4: "EXIT_TRANSFER_IN_PROGRESS",
	2: "CLAIMABLE",
}

var HostZoneUnbonding_Status_value = map[string]int32{
	"UNBONDING_QUEUE":           0,
	"UNBONDING_IN_PROGRESS":     3,
	"EXIT_TRANSFER_QUEUE":       1,
	"EXIT_TRANSFER_IN_PROGRESS": 4,
	"CLAIMABLE":                 2,
}

func (x HostZoneUnbonding_Status) String() string {
	return proto.EnumName(HostZoneUnbonding_Status_name, int32(x))
}

func (HostZoneUnbonding_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b28e84889d3ee73b, []int{5, 0}
}

type UserRedemptionRecord struct {
	Id             string                                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Sender         string                                 `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver       string                                 `protobuf:"bytes,3,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Amount         github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,4,opt,name=amount,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"amount"`
	Denom          string                                 `protobuf:"bytes,5,opt,name=denom,proto3" json:"denom,omitempty"`
	HostZoneId     string                                 `protobuf:"bytes,6,opt,name=host_zone_id,json=hostZoneId,proto3" json:"host_zone_id,omitempty"`
	EpochNumber    uint64                                 `protobuf:"varint,7,opt,name=epoch_number,json=epochNumber,proto3" json:"epoch_number,omitempty"`
	ClaimIsPending bool                                   `protobuf:"varint,8,opt,name=claim_is_pending,json=claimIsPending,proto3" json:"claim_is_pending,omitempty"`
}

func (m *UserRedemptionRecord) Reset()         { *m = UserRedemptionRecord{} }
func (m *UserRedemptionRecord) String() string { return proto.CompactTextString(m) }
func (*UserRedemptionRecord) ProtoMessage()    {}
func (*UserRedemptionRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28e84889d3ee73b, []int{0}
}
func (m *UserRedemptionRecord) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserRedemptionRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserRedemptionRecord.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserRedemptionRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRedemptionRecord.Merge(m, src)
}
func (m *UserRedemptionRecord) XXX_Size() int {
	return m.Size()
}
func (m *UserRedemptionRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRedemptionRecord.DiscardUnknown(m)
}

var xxx_messageInfo_UserRedemptionRecord proto.InternalMessageInfo

func (m *UserRedemptionRecord) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UserRedemptionRecord) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *UserRedemptionRecord) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

func (m *UserRedemptionRecord) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *UserRedemptionRecord) GetHostZoneId() string {
	if m != nil {
		return m.HostZoneId
	}
	return ""
}

func (m *UserRedemptionRecord) GetEpochNumber() uint64 {
	if m != nil {
		return m.EpochNumber
	}
	return 0
}

func (m *UserRedemptionRecord) GetClaimIsPending() bool {
	if m != nil {
		return m.ClaimIsPending
	}
	return false
}

// Params defines the parameters for the module.
type Params struct {
}

func (m *Params) Reset()      { *m = Params{} }
func (*Params) ProtoMessage() {}
func (*Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28e84889d3ee73b, []int{1}
}
func (m *Params) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Params.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params.Merge(m, src)
}
func (m *Params) XXX_Size() int {
	return m.Size()
}
func (m *Params) XXX_DiscardUnknown() {
	xxx_messageInfo_Params.DiscardUnknown(m)
}

var xxx_messageInfo_Params proto.InternalMessageInfo

type RecordsPacketData struct {
	// Types that are valid to be assigned to Packet:
	//	*RecordsPacketData_NoData
	Packet isRecordsPacketData_Packet `protobuf_oneof:"packet"`
}

func (m *RecordsPacketData) Reset()         { *m = RecordsPacketData{} }
func (m *RecordsPacketData) String() string { return proto.CompactTextString(m) }
func (*RecordsPacketData) ProtoMessage()    {}
func (*RecordsPacketData) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28e84889d3ee73b, []int{2}
}
func (m *RecordsPacketData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RecordsPacketData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RecordsPacketData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RecordsPacketData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecordsPacketData.Merge(m, src)
}
func (m *RecordsPacketData) XXX_Size() int {
	return m.Size()
}
func (m *RecordsPacketData) XXX_DiscardUnknown() {
	xxx_messageInfo_RecordsPacketData.DiscardUnknown(m)
}

var xxx_messageInfo_RecordsPacketData proto.InternalMessageInfo

type isRecordsPacketData_Packet interface {
	isRecordsPacketData_Packet()
	MarshalTo([]byte) (int, error)
	Size() int
}

type RecordsPacketData_NoData struct {
	NoData *NoData `protobuf:"bytes,1,opt,name=no_data,json=noData,proto3,oneof" json:"no_data,omitempty"`
}

func (*RecordsPacketData_NoData) isRecordsPacketData_Packet() {}

func (m *RecordsPacketData) GetPacket() isRecordsPacketData_Packet {
	if m != nil {
		return m.Packet
	}
	return nil
}

func (m *RecordsPacketData) GetNoData() *NoData {
	if x, ok := m.GetPacket().(*RecordsPacketData_NoData); ok {
		return x.NoData
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RecordsPacketData) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RecordsPacketData_NoData)(nil),
	}
}

type NoData struct {
}

func (m *NoData) Reset()         { *m = NoData{} }
func (m *NoData) String() string { return proto.CompactTextString(m) }
func (*NoData) ProtoMessage()    {}
func (*NoData) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28e84889d3ee73b, []int{3}
}
func (m *NoData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NoData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NoData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NoData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NoData.Merge(m, src)
}
func (m *NoData) XXX_Size() int {
	return m.Size()
}
func (m *NoData) XXX_DiscardUnknown() {
	xxx_messageInfo_NoData.DiscardUnknown(m)
}

var xxx_messageInfo_NoData proto.InternalMessageInfo

type DepositRecord struct {
	Id                 uint64                                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Amount             github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,2,opt,name=amount,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"amount"`
	Denom              string                                 `protobuf:"bytes,3,opt,name=denom,proto3" json:"denom,omitempty"`
	HostZoneId         string                                 `protobuf:"bytes,4,opt,name=host_zone_id,json=hostZoneId,proto3" json:"host_zone_id,omitempty"`
	Status             DepositRecord_Status                   `protobuf:"varint,6,opt,name=status,proto3,enum=stayking.records.DepositRecord_Status" json:"status,omitempty"`
	DepositEpochNumber uint64                                 `protobuf:"varint,7,opt,name=deposit_epoch_number,json=depositEpochNumber,proto3" json:"deposit_epoch_number,omitempty"`
	Source             DepositRecord_Source                   `protobuf:"varint,8,opt,name=source,proto3,enum=stayking.records.DepositRecord_Source" json:"source,omitempty"`
}

func (m *DepositRecord) Reset()         { *m = DepositRecord{} }
func (m *DepositRecord) String() string { return proto.CompactTextString(m) }
func (*DepositRecord) ProtoMessage()    {}
func (*DepositRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28e84889d3ee73b, []int{4}
}
func (m *DepositRecord) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DepositRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DepositRecord.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DepositRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DepositRecord.Merge(m, src)
}
func (m *DepositRecord) XXX_Size() int {
	return m.Size()
}
func (m *DepositRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_DepositRecord.DiscardUnknown(m)
}

var xxx_messageInfo_DepositRecord proto.InternalMessageInfo

func (m *DepositRecord) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DepositRecord) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *DepositRecord) GetHostZoneId() string {
	if m != nil {
		return m.HostZoneId
	}
	return ""
}

func (m *DepositRecord) GetStatus() DepositRecord_Status {
	if m != nil {
		return m.Status
	}
	return DepositRecord_TRANSFER_QUEUE
}

func (m *DepositRecord) GetDepositEpochNumber() uint64 {
	if m != nil {
		return m.DepositEpochNumber
	}
	return 0
}

func (m *DepositRecord) GetSource() DepositRecord_Source {
	if m != nil {
		return m.Source
	}
	return DepositRecord_STRIDE
}

type HostZoneUnbonding struct {
	StTokenAmount         github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,1,opt,name=st_token_amount,json=stTokenAmount,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"st_token_amount"`
	NativeTokenAmount     github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,2,opt,name=native_token_amount,json=nativeTokenAmount,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"native_token_amount"`
	Denom                 string                                 `protobuf:"bytes,3,opt,name=denom,proto3" json:"denom,omitempty"`
	HostZoneId            string                                 `protobuf:"bytes,4,opt,name=host_zone_id,json=hostZoneId,proto3" json:"host_zone_id,omitempty"`
	UnbondingTime         uint64                                 `protobuf:"varint,5,opt,name=unbonding_time,json=unbondingTime,proto3" json:"unbonding_time,omitempty"`
	Status                HostZoneUnbonding_Status               `protobuf:"varint,6,opt,name=status,proto3,enum=stayking.records.HostZoneUnbonding_Status" json:"status,omitempty"`
	UserRedemptionRecords []string                               `protobuf:"bytes,7,rep,name=user_redemption_records,json=userRedemptionRecords,proto3" json:"user_redemption_records,omitempty"`
}

func (m *HostZoneUnbonding) Reset()         { *m = HostZoneUnbonding{} }
func (m *HostZoneUnbonding) String() string { return proto.CompactTextString(m) }
func (*HostZoneUnbonding) ProtoMessage()    {}
func (*HostZoneUnbonding) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28e84889d3ee73b, []int{5}
}
func (m *HostZoneUnbonding) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HostZoneUnbonding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HostZoneUnbonding.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HostZoneUnbonding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostZoneUnbonding.Merge(m, src)
}
func (m *HostZoneUnbonding) XXX_Size() int {
	return m.Size()
}
func (m *HostZoneUnbonding) XXX_DiscardUnknown() {
	xxx_messageInfo_HostZoneUnbonding.DiscardUnknown(m)
}

var xxx_messageInfo_HostZoneUnbonding proto.InternalMessageInfo

func (m *HostZoneUnbonding) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *HostZoneUnbonding) GetHostZoneId() string {
	if m != nil {
		return m.HostZoneId
	}
	return ""
}

func (m *HostZoneUnbonding) GetUnbondingTime() uint64 {
	if m != nil {
		return m.UnbondingTime
	}
	return 0
}

func (m *HostZoneUnbonding) GetStatus() HostZoneUnbonding_Status {
	if m != nil {
		return m.Status
	}
	return HostZoneUnbonding_UNBONDING_QUEUE
}

func (m *HostZoneUnbonding) GetUserRedemptionRecords() []string {
	if m != nil {
		return m.UserRedemptionRecords
	}
	return nil
}

type EpochUnbondingRecord struct {
	EpochNumber        uint64               `protobuf:"varint,1,opt,name=epoch_number,json=epochNumber,proto3" json:"epoch_number,omitempty"`
	HostZoneUnbondings []*HostZoneUnbonding `protobuf:"bytes,3,rep,name=host_zone_unbondings,json=hostZoneUnbondings,proto3" json:"host_zone_unbondings,omitempty"`
}

func (m *EpochUnbondingRecord) Reset()         { *m = EpochUnbondingRecord{} }
func (m *EpochUnbondingRecord) String() string { return proto.CompactTextString(m) }
func (*EpochUnbondingRecord) ProtoMessage()    {}
func (*EpochUnbondingRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28e84889d3ee73b, []int{6}
}
func (m *EpochUnbondingRecord) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EpochUnbondingRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EpochUnbondingRecord.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EpochUnbondingRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EpochUnbondingRecord.Merge(m, src)
}
func (m *EpochUnbondingRecord) XXX_Size() int {
	return m.Size()
}
func (m *EpochUnbondingRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_EpochUnbondingRecord.DiscardUnknown(m)
}

var xxx_messageInfo_EpochUnbondingRecord proto.InternalMessageInfo

func (m *EpochUnbondingRecord) GetEpochNumber() uint64 {
	if m != nil {
		return m.EpochNumber
	}
	return 0
}

func (m *EpochUnbondingRecord) GetHostZoneUnbondings() []*HostZoneUnbonding {
	if m != nil {
		return m.HostZoneUnbondings
	}
	return nil
}

// GenesisState defines the recordπs module's genesis state.
// next id: 9
type GenesisState struct {
	Params                    Params                 `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
	PortId                    string                 `protobuf:"bytes,2,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	UserRedemptionRecordList  []UserRedemptionRecord `protobuf:"bytes,3,rep,name=user_redemption_record_list,json=userRedemptionRecordList,proto3" json:"user_redemption_record_list"`
	UserRedemptionRecordCount uint64                 `protobuf:"varint,4,opt,name=user_redemption_record_count,json=userRedemptionRecordCount,proto3" json:"user_redemption_record_count,omitempty"`
	EpochUnbondingRecordList  []EpochUnbondingRecord `protobuf:"bytes,5,rep,name=epoch_unbonding_record_list,json=epochUnbondingRecordList,proto3" json:"epoch_unbonding_record_list"`
	DepositRecordList         []DepositRecord        `protobuf:"bytes,7,rep,name=deposit_record_list,json=depositRecordList,proto3" json:"deposit_record_list"`
	DepositRecordCount        uint64                 `protobuf:"varint,8,opt,name=deposit_record_count,json=depositRecordCount,proto3" json:"deposit_record_count,omitempty"`
}

func (m *GenesisState) Reset()         { *m = GenesisState{} }
func (m *GenesisState) String() string { return proto.CompactTextString(m) }
func (*GenesisState) ProtoMessage()    {}
func (*GenesisState) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28e84889d3ee73b, []int{7}
}
func (m *GenesisState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GenesisState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GenesisState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GenesisState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisState.Merge(m, src)
}
func (m *GenesisState) XXX_Size() int {
	return m.Size()
}
func (m *GenesisState) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisState.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisState proto.InternalMessageInfo

func (m *GenesisState) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

func (m *GenesisState) GetPortId() string {
	if m != nil {
		return m.PortId
	}
	return ""
}

func (m *GenesisState) GetUserRedemptionRecordList() []UserRedemptionRecord {
	if m != nil {
		return m.UserRedemptionRecordList
	}
	return nil
}

func (m *GenesisState) GetUserRedemptionRecordCount() uint64 {
	if m != nil {
		return m.UserRedemptionRecordCount
	}
	return 0
}

func (m *GenesisState) GetEpochUnbondingRecordList() []EpochUnbondingRecord {
	if m != nil {
		return m.EpochUnbondingRecordList
	}
	return nil
}

func (m *GenesisState) GetDepositRecordList() []DepositRecord {
	if m != nil {
		return m.DepositRecordList
	}
	return nil
}

func (m *GenesisState) GetDepositRecordCount() uint64 {
	if m != nil {
		return m.DepositRecordCount
	}
	return 0
}

func init() {
	proto.RegisterEnum("stayking.records.DepositRecord_Status", DepositRecord_Status_name, DepositRecord_Status_value)
	proto.RegisterEnum("stayking.records.DepositRecord_Source", DepositRecord_Source_name, DepositRecord_Source_value)
	proto.RegisterEnum("stayking.records.HostZoneUnbonding_Status", HostZoneUnbonding_Status_name, HostZoneUnbonding_Status_value)
	proto.RegisterType((*UserRedemptionRecord)(nil), "stayking.records.UserRedemptionRecord")
	proto.RegisterType((*Params)(nil), "stayking.records.Params")
	proto.RegisterType((*RecordsPacketData)(nil), "stayking.records.RecordsPacketData")
	proto.RegisterType((*NoData)(nil), "stayking.records.NoData")
	proto.RegisterType((*DepositRecord)(nil), "stayking.records.DepositRecord")
	proto.RegisterType((*HostZoneUnbonding)(nil), "stayking.records.HostZoneUnbonding")
	proto.RegisterType((*EpochUnbondingRecord)(nil), "stayking.records.EpochUnbondingRecord")
	proto.RegisterType((*GenesisState)(nil), "stayking.records.GenesisState")
}

func init() { proto.RegisterFile("stayking/records/genesis.proto", fileDescriptor_b28e84889d3ee73b) }

var fileDescriptor_b28e84889d3ee73b = []byte{
	// 974 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x3d, 0x6f, 0xdb, 0x46,
	0x18, 0x16, 0x25, 0x9a, 0x92, 0x5f, 0xdb, 0x8a, 0x7c, 0x56, 0x62, 0xda, 0x69, 0x65, 0x95, 0x45,
	0x03, 0xa1, 0x45, 0xa5, 0xc2, 0x01, 0x32, 0x74, 0x68, 0x21, 0x59, 0x8c, 0xcd, 0x40, 0x91, 0xdd,
	0x93, 0xd4, 0x14, 0x19, 0x4a, 0xd0, 0xe2, 0x41, 0x3a, 0x28, 0xe4, 0x09, 0xbc, 0x53, 0xd0, 0x74,
	0xe9, 0xd0, 0x3f, 0xd0, 0xa9, 0xe8, 0xd8, 0x2d, 0x7f, 0x25, 0x63, 0xc6, 0xa2, 0x43, 0x50, 0xd8,
	0x63, 0xff, 0x44, 0xc1, 0x23, 0x4d, 0x53, 0x1f, 0x6e, 0x03, 0xa3, 0x93, 0xc4, 0xf7, 0xf3, 0xde,
	0xf7, 0x79, 0xf8, 0x1c, 0xa1, 0xc2, 0x85, 0xf3, 0x6a, 0x42, 0xfd, 0x51, 0x23, 0x20, 0x43, 0x16,
	0xb8, 0xbc, 0x31, 0x22, 0x3e, 0xe1, 0x94, 0xd7, 0xa7, 0x01, 0x13, 0x0c, 0x95, 0xae, 0xfc, 0xf5,
	0xd8, 0xbf, 0x5f, 0x1e, 0xb1, 0x11, 0x93, 0xce, 0x46, 0xf8, 0x2f, 0x8a, 0x33, 0x5e, 0x67, 0xa1,
	0x3c, 0xe0, 0x24, 0xc0, 0xc4, 0x25, 0xde, 0x54, 0x50, 0xe6, 0x63, 0x19, 0x8f, 0x8a, 0x90, 0xa5,
	0xae, 0xae, 0x54, 0x95, 0xda, 0x3a, 0xce, 0x52, 0x17, 0xdd, 0x03, 0x8d, 0x13, 0xdf, 0x25, 0x81,
	0x9e, 0x95, 0xb6, 0xf8, 0x09, 0xed, 0x43, 0x21, 0x20, 0x43, 0x42, 0x5f, 0x92, 0x40, 0xcf, 0x49,
	0x4f, 0xf2, 0x8c, 0x1e, 0x83, 0xe6, 0x78, 0x6c, 0xe6, 0x0b, 0x5d, 0x0d, 0x3d, 0xad, 0xfa, 0x9b,
	0x77, 0x07, 0x99, 0x3f, 0xdf, 0x1d, 0x3c, 0x18, 0x51, 0x31, 0x9e, 0x9d, 0xd7, 0x87, 0xcc, 0x6b,
	0x0c, 0x19, 0xf7, 0x18, 0x8f, 0x7f, 0x3e, 0xe7, 0xee, 0xa4, 0x21, 0x5e, 0x4d, 0x09, 0xaf, 0x5b,
	0xbe, 0xc0, 0x71, 0x36, 0x2a, 0xc3, 0x9a, 0x4b, 0x7c, 0xe6, 0xe9, 0x6b, 0xb2, 0x41, 0xf4, 0x80,
	0xaa, 0xb0, 0x39, 0x66, 0x5c, 0xd8, 0x3f, 0x32, 0x9f, 0xd8, 0xd4, 0xd5, 0x35, 0xe9, 0x84, 0xd0,
	0xf6, 0x9c, 0xf9, 0xc4, 0x72, 0xd1, 0x47, 0xb0, 0x49, 0xa6, 0x6c, 0x38, 0xb6, 0xfd, 0x99, 0x77,
	0x4e, 0x02, 0x3d, 0x5f, 0x55, 0x6a, 0x2a, 0xde, 0x90, 0xb6, 0xae, 0x34, 0xa1, 0x1a, 0x94, 0x86,
	0x2f, 0x1c, 0xea, 0xd9, 0x94, 0xdb, 0x53, 0xe2, 0xbb, 0xd4, 0x1f, 0xe9, 0x85, 0xaa, 0x52, 0x2b,
	0xe0, 0xa2, 0xb4, 0x5b, 0xfc, 0x2c, 0xb2, 0x1a, 0x45, 0xd0, 0xce, 0x9c, 0xc0, 0xf1, 0xf8, 0x97,
	0xea, 0x6f, 0xbf, 0x1f, 0x64, 0x0c, 0x0c, 0xdb, 0xd1, 0xaa, 0xf8, 0x99, 0x33, 0x9c, 0x10, 0xd1,
	0x76, 0x84, 0x83, 0x1e, 0x42, 0xde, 0x67, 0xb6, 0xeb, 0x08, 0x47, 0xae, 0x6e, 0xe3, 0x50, 0xaf,
	0x2f, 0x02, 0x51, 0xef, 0xb2, 0x30, 0xf4, 0x24, 0x83, 0x35, 0x5f, 0xfe, 0x6b, 0x15, 0x40, 0x9b,
	0xca, 0x12, 0x46, 0x01, 0xb4, 0xc8, 0x6b, 0xfc, 0x9d, 0x83, 0xad, 0x36, 0x99, 0x32, 0x4e, 0xc5,
	0x12, 0x20, 0xaa, 0x04, 0xe4, 0x7a, 0xb9, 0xd9, 0xff, 0x67, 0xb9, 0xb9, 0x7f, 0x5b, 0xae, 0xba,
	0xb4, 0xdc, 0xaf, 0x40, 0xe3, 0xc2, 0x11, 0x33, 0x2e, 0x17, 0x5f, 0x3c, 0x7c, 0xb0, 0x3c, 0xe9,
	0xdc, 0x00, 0xf5, 0x9e, 0x8c, 0xc6, 0x71, 0x16, 0xfa, 0x02, 0xca, 0x6e, 0xe4, 0xb7, 0x57, 0x80,
	0x84, 0x62, 0x9f, 0x99, 0xc2, 0x2a, 0xec, 0xc8, 0x66, 0xc1, 0x90, 0x48, 0x84, 0xde, 0xa7, 0xa3,
	0x8c, 0xc6, 0x71, 0x96, 0x31, 0x06, 0x2d, 0x3a, 0x03, 0x42, 0x50, 0xec, 0xe3, 0x66, 0xb7, 0xf7,
	0xd8, 0xc4, 0xf6, 0x37, 0x03, 0x73, 0x60, 0x96, 0x32, 0x48, 0x87, 0x72, 0x62, 0xb3, 0xba, 0xf6,
	0x19, 0x3e, 0x3d, 0xc6, 0x66, 0xaf, 0x57, 0xca, 0xa2, 0x32, 0x94, 0xda, 0x66, 0xc7, 0x3c, 0x6e,
	0xf6, 0xad, 0xd3, 0x6e, 0x1c, 0xaf, 0xa0, 0x7d, 0xb8, 0x97, 0xb2, 0xa6, 0x33, 0x72, 0x46, 0x0d,
	0xb4, 0xa8, 0x37, 0x02, 0xd0, 0x7a, 0x7d, 0x6c, 0xb5, 0xc3, 0x0e, 0x08, 0x8a, 0xcf, 0xac, 0xfe,
	0x49, 0x1b, 0x37, 0x9f, 0x35, 0x3b, 0xb6, 0x75, 0xd4, 0x2c, 0x29, 0x4f, 0xd4, 0xc2, 0x5a, 0x49,
	0x33, 0x5e, 0xab, 0xb0, 0x7d, 0x12, 0xaf, 0x76, 0xe0, 0x9f, 0x33, 0xc9, 0x38, 0xf4, 0x2d, 0xdc,
	0xe1, 0xc2, 0x16, 0x6c, 0x42, 0x7c, 0x3b, 0x86, 0x5a, 0xb9, 0x15, 0xd4, 0x5b, 0x5c, 0xf4, 0xc3,
	0x2a, 0xcd, 0x08, 0xf1, 0xef, 0x61, 0xc7, 0x77, 0x04, 0x7d, 0x49, 0xe6, 0x6b, 0xdf, 0x8e, 0x46,
	0xdb, 0x51, 0xa9, 0x74, 0xfd, 0xdb, 0x32, 0xea, 0x13, 0x28, 0xce, 0xae, 0x86, 0xb7, 0x05, 0xf5,
	0x88, 0x7c, 0xdf, 0x55, 0xbc, 0x95, 0x58, 0xfb, 0xd4, 0x23, 0xa8, 0xb5, 0x40, 0xbc, 0x4f, 0x97,
	0x69, 0xb0, 0xb4, 0xcb, 0x45, 0xf2, 0x3d, 0x82, 0xdd, 0x19, 0x27, 0x81, 0x1d, 0x24, 0xb2, 0x67,
	0xc7, 0xb9, 0x7a, 0xbe, 0x9a, 0xab, 0xad, 0xe3, 0xbb, 0xb3, 0x15, 0xa2, 0xc8, 0x8d, 0x9f, 0x12,
	0x0a, 0xed, 0xc0, 0x9d, 0x41, 0xb7, 0x75, 0xda, 0x6d, 0x5b, 0xdd, 0xe3, 0x84, 0x43, 0x7b, 0x70,
	0xf7, 0xda, 0x38, 0x47, 0x09, 0xb4, 0x0b, 0x3b, 0xe6, 0x77, 0x56, 0xdf, 0x5e, 0xe0, 0x9d, 0x82,
	0x3e, 0x84, 0xbd, 0x79, 0x47, 0x3a, 0x4f, 0x45, 0x5b, 0xb0, 0x7e, 0xd4, 0x69, 0x5a, 0x4f, 0x9b,
	0xad, 0x8e, 0x59, 0xca, 0x1a, 0xbf, 0x2a, 0x50, 0x96, 0xef, 0x44, 0x32, 0x5a, 0x2c, 0x0f, 0x8b,
	0x5a, 0xa7, 0x2c, 0x6b, 0xdd, 0x00, 0xca, 0xd7, 0x08, 0x24, 0x3b, 0xe5, 0x7a, 0xae, 0x9a, 0xab,
	0x6d, 0x1c, 0x7e, 0xfc, 0x1e, 0x6b, 0xc4, 0x68, 0xbc, 0x68, 0xe2, 0x4f, 0xd4, 0x42, 0xb6, 0x94,
	0x33, 0x7e, 0x56, 0x61, 0xf3, 0x38, 0xba, 0x82, 0xc2, 0x0d, 0x11, 0xf4, 0x28, 0x54, 0xb5, 0x50,
	0x2f, 0x6f, 0x56, 0xc2, 0x48, 0x4f, 0x5b, 0x6a, 0x48, 0x39, 0x1c, 0x47, 0xa3, 0x5d, 0xc8, 0x4f,
	0x59, 0x20, 0x42, 0x8a, 0xc4, 0x37, 0x4d, 0xf8, 0x68, 0xb9, 0x68, 0x02, 0xf7, 0x57, 0x63, 0x66,
	0xbf, 0xa0, 0x5c, 0xc4, 0x53, 0xac, 0xd0, 0x84, 0x55, 0xd7, 0x5b, 0xdc, 0x53, 0x5f, 0x85, 0x72,
	0x87, 0x72, 0x81, 0xbe, 0x86, 0x0f, 0x6e, 0x68, 0x36, 0x4c, 0x2e, 0x34, 0x15, 0xef, 0xad, 0xca,
	0x3f, 0x92, 0x2f, 0xc1, 0x04, 0xee, 0x47, 0x78, 0x5c, 0x53, 0x3a, 0x7d, 0xda, 0xb5, 0x9b, 0x4e,
	0xbb, 0x0a, 0xdc, 0xab, 0xd3, 0x92, 0x15, 0x3e, 0x79, 0xda, 0x01, 0xec, 0x5c, 0x69, 0x69, 0xba,
	0x49, 0x5e, 0x36, 0x39, 0xf8, 0x0f, 0x99, 0x8c, 0xab, 0x6f, 0xbb, 0x69, 0xa3, 0x2c, 0x9b, 0x92,
	0xe8, 0xb9, 0xe1, 0x0b, 0x73, 0x12, 0x9d, 0x9a, 0xfa, 0x70, 0x0d, 0x72, 0x4f, 0xf9, 0xa8, 0x65,
	0xbe, 0xb9, 0xa8, 0x28, 0x6f, 0x2f, 0x2a, 0xca, 0x5f, 0x17, 0x15, 0xe5, 0x97, 0xcb, 0x4a, 0xe6,
	0xed, 0x65, 0x25, 0xf3, 0xc7, 0x65, 0x25, 0xf3, 0xfc, 0xb3, 0x94, 0xac, 0x70, 0xc6, 0xc6, 0x8c,
	0xb2, 0x46, 0xf2, 0x29, 0xf3, 0x43, 0xf2, 0x31, 0x23, 0xf5, 0xe5, 0x5c, 0x93, 0xdf, 0x28, 0x0f,
	0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0xc8, 0x77, 0x99, 0x7a, 0xed, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stayking.records.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "stayking/records/genesis.proto",
}

func (m *UserRedemptionRecord) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserRedemptionRecord) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserRedemptionRecord) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ClaimIsPending {
		i--
		if m.ClaimIsPending {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if m.EpochNumber != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.EpochNumber))
		i--
		dAtA[i] = 0x38
	}
	if len(m.HostZoneId) > 0 {
		i -= len(m.HostZoneId)
		copy(dAtA[i:], m.HostZoneId)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.HostZoneId)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x2a
	}
	{
		size := m.Amount.Size()
		i -= size
		if _, err := m.Amount.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	if len(m.Receiver) > 0 {
		i -= len(m.Receiver)
		copy(dAtA[i:], m.Receiver)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.Receiver)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Params) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Params) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Params) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *RecordsPacketData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RecordsPacketData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RecordsPacketData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Packet != nil {
		{
			size := m.Packet.Size()
			i -= size
			if _, err := m.Packet.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *RecordsPacketData_NoData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RecordsPacketData_NoData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NoData != nil {
		{
			size, err := m.NoData.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenesis(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *NoData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NoData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NoData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *DepositRecord) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DepositRecord) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DepositRecord) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Source != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.Source))
		i--
		dAtA[i] = 0x40
	}
	if m.DepositEpochNumber != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.DepositEpochNumber))
		i--
		dAtA[i] = 0x38
	}
	if m.Status != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x30
	}
	if len(m.HostZoneId) > 0 {
		i -= len(m.HostZoneId)
		copy(dAtA[i:], m.HostZoneId)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.HostZoneId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size := m.Amount.Size()
		i -= size
		if _, err := m.Amount.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if m.Id != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *HostZoneUnbonding) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HostZoneUnbonding) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HostZoneUnbonding) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.UserRedemptionRecords) > 0 {
		for iNdEx := len(m.UserRedemptionRecords) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.UserRedemptionRecords[iNdEx])
			copy(dAtA[i:], m.UserRedemptionRecords[iNdEx])
			i = encodeVarintGenesis(dAtA, i, uint64(len(m.UserRedemptionRecords[iNdEx])))
			i--
			dAtA[i] = 0x3a
		}
	}
	if m.Status != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x30
	}
	if m.UnbondingTime != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.UnbondingTime))
		i--
		dAtA[i] = 0x28
	}
	if len(m.HostZoneId) > 0 {
		i -= len(m.HostZoneId)
		copy(dAtA[i:], m.HostZoneId)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.HostZoneId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size := m.NativeTokenAmount.Size()
		i -= size
		if _, err := m.NativeTokenAmount.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size := m.StTokenAmount.Size()
		i -= size
		if _, err := m.StTokenAmount.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *EpochUnbondingRecord) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EpochUnbondingRecord) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EpochUnbondingRecord) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.HostZoneUnbondings) > 0 {
		for iNdEx := len(m.HostZoneUnbondings) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.HostZoneUnbondings[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.EpochNumber != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.EpochNumber))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GenesisState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GenesisState) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GenesisState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.DepositRecordCount != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.DepositRecordCount))
		i--
		dAtA[i] = 0x40
	}
	if len(m.DepositRecordList) > 0 {
		for iNdEx := len(m.DepositRecordList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.DepositRecordList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if len(m.EpochUnbondingRecordList) > 0 {
		for iNdEx := len(m.EpochUnbondingRecordList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.EpochUnbondingRecordList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.UserRedemptionRecordCount != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.UserRedemptionRecordCount))
		i--
		dAtA[i] = 0x20
	}
	if len(m.UserRedemptionRecordList) > 0 {
		for iNdEx := len(m.UserRedemptionRecordList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.UserRedemptionRecordList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.PortId) > 0 {
		i -= len(m.PortId)
		copy(dAtA[i:], m.PortId)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.PortId)))
		i--
		dAtA[i] = 0x12
	}
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintGenesis(dAtA []byte, offset int, v uint64) int {
	offset -= sovGenesis(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *UserRedemptionRecord) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	l = len(m.Receiver)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	l = m.Amount.Size()
	n += 1 + l + sovGenesis(uint64(l))
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	l = len(m.HostZoneId)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	if m.EpochNumber != 0 {
		n += 1 + sovGenesis(uint64(m.EpochNumber))
	}
	if m.ClaimIsPending {
		n += 2
	}
	return n
}

func (m *Params) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *RecordsPacketData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Packet != nil {
		n += m.Packet.Size()
	}
	return n
}

func (m *RecordsPacketData_NoData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NoData != nil {
		l = m.NoData.Size()
		n += 1 + l + sovGenesis(uint64(l))
	}
	return n
}
func (m *NoData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *DepositRecord) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovGenesis(uint64(m.Id))
	}
	l = m.Amount.Size()
	n += 1 + l + sovGenesis(uint64(l))
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	l = len(m.HostZoneId)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovGenesis(uint64(m.Status))
	}
	if m.DepositEpochNumber != 0 {
		n += 1 + sovGenesis(uint64(m.DepositEpochNumber))
	}
	if m.Source != 0 {
		n += 1 + sovGenesis(uint64(m.Source))
	}
	return n
}

func (m *HostZoneUnbonding) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.StTokenAmount.Size()
	n += 1 + l + sovGenesis(uint64(l))
	l = m.NativeTokenAmount.Size()
	n += 1 + l + sovGenesis(uint64(l))
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	l = len(m.HostZoneId)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	if m.UnbondingTime != 0 {
		n += 1 + sovGenesis(uint64(m.UnbondingTime))
	}
	if m.Status != 0 {
		n += 1 + sovGenesis(uint64(m.Status))
	}
	if len(m.UserRedemptionRecords) > 0 {
		for _, s := range m.UserRedemptionRecords {
			l = len(s)
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	return n
}

func (m *EpochUnbondingRecord) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.EpochNumber != 0 {
		n += 1 + sovGenesis(uint64(m.EpochNumber))
	}
	if len(m.HostZoneUnbondings) > 0 {
		for _, e := range m.HostZoneUnbondings {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	return n
}

func (m *GenesisState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Params.Size()
	n += 1 + l + sovGenesis(uint64(l))
	l = len(m.PortId)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	if len(m.UserRedemptionRecordList) > 0 {
		for _, e := range m.UserRedemptionRecordList {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if m.UserRedemptionRecordCount != 0 {
		n += 1 + sovGenesis(uint64(m.UserRedemptionRecordCount))
	}
	if len(m.EpochUnbondingRecordList) > 0 {
		for _, e := range m.EpochUnbondingRecordList {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if len(m.DepositRecordList) > 0 {
		for _, e := range m.DepositRecordList {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if m.DepositRecordCount != 0 {
		n += 1 + sovGenesis(uint64(m.DepositRecordCount))
	}
	return n
}

func sovGenesis(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGenesis(x uint64) (n int) {
	return sovGenesis(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *UserRedemptionRecord) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserRedemptionRecord: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserRedemptionRecord: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Receiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Amount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HostZoneId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HostZoneId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EpochNumber", wireType)
			}
			m.EpochNumber = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EpochNumber |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClaimIsPending", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ClaimIsPending = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Params) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Params: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Params: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RecordsPacketData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RecordsPacketData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RecordsPacketData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &NoData{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Packet = &RecordsPacketData_NoData{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NoData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NoData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NoData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DepositRecord) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DepositRecord: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DepositRecord: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Amount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HostZoneId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HostZoneId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= DepositRecord_Status(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepositEpochNumber", wireType)
			}
			m.DepositEpochNumber = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DepositEpochNumber |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Source", wireType)
			}
			m.Source = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Source |= DepositRecord_Source(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HostZoneUnbonding) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HostZoneUnbonding: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HostZoneUnbonding: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StTokenAmount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.StTokenAmount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NativeTokenAmount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.NativeTokenAmount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HostZoneId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HostZoneId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnbondingTime", wireType)
			}
			m.UnbondingTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UnbondingTime |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= HostZoneUnbonding_Status(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserRedemptionRecords", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserRedemptionRecords = append(m.UserRedemptionRecords, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EpochUnbondingRecord) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EpochUnbondingRecord: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EpochUnbondingRecord: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EpochNumber", wireType)
			}
			m.EpochNumber = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EpochNumber |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HostZoneUnbondings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HostZoneUnbondings = append(m.HostZoneUnbondings, &HostZoneUnbonding{})
			if err := m.HostZoneUnbondings[len(m.HostZoneUnbondings)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GenesisState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GenesisState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GenesisState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PortId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PortId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserRedemptionRecordList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserRedemptionRecordList = append(m.UserRedemptionRecordList, UserRedemptionRecord{})
			if err := m.UserRedemptionRecordList[len(m.UserRedemptionRecordList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserRedemptionRecordCount", wireType)
			}
			m.UserRedemptionRecordCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserRedemptionRecordCount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EpochUnbondingRecordList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EpochUnbondingRecordList = append(m.EpochUnbondingRecordList, EpochUnbondingRecord{})
			if err := m.EpochUnbondingRecordList[len(m.EpochUnbondingRecordList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepositRecordList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DepositRecordList = append(m.DepositRecordList, DepositRecord{})
			if err := m.DepositRecordList[len(m.DepositRecordList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepositRecordCount", wireType)
			}
			m.DepositRecordCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DepositRecordCount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGenesis(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGenesis
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGenesis
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGenesis
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGenesis        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGenesis          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGenesis = fmt.Errorf("proto: unexpected end of group")
)
